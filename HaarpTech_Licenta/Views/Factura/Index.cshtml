@model IEnumerable<HaarpTech_Licenta.Models.Factura>

@{
    ViewData["Title"] = "Listă Facturi";
}

<div class="container mt-5 px-4">
    <!-- Filtre client-side -->
    <div class="d-flex flex-wrap justify-content-between align-items-end mb-4 gap-3">
        <div class="form-group">
            <label for="startDate" class="form-label">Data de la</label>
            <input type="date" id="startDate" class="form-control" />
        </div>
        <div class="form-group">
            <label for="endDate" class="form-label">Data până la</label>
            <input type="date" id="endDate" class="form-control" />
        </div>
        <div class="form-group flex-grow-1">
            <label for="searchInput" class="form-label">Caută serie/număr/dată</label>
            <input type="text" id="searchInput" class="form-control" placeholder="Ex: AB123, 01.07.2025 ..." />
        </div>
        <div class="form-group align-self-end">
            <button id="filterBtn" class="btn btn-primary mt-2">
                <i class="bi bi-funnel"></i> Aplică filtre
            </button>
        </div>
    </div>

    <!-- Card cu tabelul facturilor -->
    <div class="card shadow-lg rounded-3 border-0">
        <div class="card-header bg-primary text-white py-3">
            <h4 class="mb-0"><i class="bi bi-table"></i> Detalii Facturi</h4>
        </div>
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive custom-table-wrapper">
                    <table class="table table-hover table-striped mb-0">
                        <thead class="thead-light">
                            <tr>
                                <th>Seria</th>
                                <th>Număr</th>
                                <th>Data Emiterii</th>
                                <th>Moneda</th>
                                <th>Total Fără TVA</th>
                                <th>Total Cu TVA</th>
                                <th>Total Factură</th>
                                <th class="text-end">Acțiuni</th>
                            </tr>
                        </thead>
                        <tbody id="facturaTable">
                            @foreach (var factura in Model)
                            {
                                <tr class="factura-row">
                                    <td class="col-serie">@factura.SeriaFactura</td>
                                    <td class="col-numar">@factura.NumarFactura</td>
                                    <td class="col-data">@factura.DataEmitere.ToString("dd.MM.yyyy")</td>
                                    <td>@factura.Moneda</td>
                                    <td>@(factura.TotalFaraTva?.ToString("N2") ?? "")</td>
                                    <td>@(factura.TotalCuTva?.ToString("N2") ?? "")</td>
                                    <td>@(factura.TotalFactura?.ToString("N2") ?? "")</td>
                                    <td class="text-end">
                                        <div class="d-flex gap-1 justify-content-end">
                                            <a class="btn btn-warning btn-sm" asp-action="Details" asp-route-id="@factura.ID_FACTURA">
                                                <i class="bi bi-info-circle"></i>
                                            </a>
                                            @if (User.IsInRole("Admin") || User.IsInRole("Consultant") || User.IsInRole("DepartamentFinanciar"))
                                            {
                                                <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@factura.ID_FACTURA">
                                                    <i class="bi bi-trash3-fill"></i>
                                                </a>
                                            }
                                            <a asp-action="PrintFacturaPdf" asp-route-id="@factura.ID_FACTURA" class="btn btn-success btn-sm" title="Descarcă PDF">
                                                <i class="bi bi-file-pdf-fill"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Footer cu numărul de facturi vizibile -->
                <div class="card-footer bg-light py-3 px-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <span id="invoiceCount" class="text-muted">
                            @Model.Count() facturi înregistrate
                        </span>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info m-3">Nu există facturi înregistrate.</div>
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
            transform: translateX(2px);
            transition: transform 0.2s ease;
        }

        .custom-table-wrapper {
            overflow-x: auto;
            margin: 0 1rem;
        }

        th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
            background-color: #e9f7fe !important;
            color: #0d6efd;
            white-space: nowrap;
        }

        .form-group .form-label {
            font-weight: 500;
        }
        @@media (max-width: 768px) {
            .form-group

        {
            flex: 1 1 100%;
        }

        .table td, .table th {
            padding: 0.5rem;
            font-size: 0.875rem;
        }

        }
    </style>
}

@section Scripts {
    <script>
        // Pregătim array-ul de rânduri
        const rows = Array.from(document.querySelectorAll('.factura-row'));

        function applyFilters() {
            const start = document.getElementById('startDate').value;
            const end   = document.getElementById('endDate').value;
            const term  = document.getElementById('searchInput').value.trim().toLowerCase();
            let visibleCount = 0;

            rows.forEach(row => {
                const serie = row.querySelector('.col-serie').innerText.toLowerCase();
                const numar = row.querySelector('.col-numar').innerText.toLowerCase();
                const data  = row.querySelector('.col-data').innerText; // "dd.MM.yyyy"

                // Convertim dd.MM.yyyy → yyyy-MM-dd
                const parts = data.split('.');
                const iso   = `${parts[2]}-${parts[1]}-${parts[0]}`;

                // Logica de filtrare
                let show = true;
                if (start && iso < start) show = false;
                if (end   && iso > end)   show = false;
                const combined = `${serie} ${numar} ${data}`.toLowerCase();
                if (term && !combined.includes(term)) show = false;

                // Aplicăm vizibilitatea și contăm
                row.style.display = show ? '' : 'none';
                if (show) visibleCount++;
            });

            // Actualizăm numărul din footer
            document.getElementById('invoiceCount').innerText =
                `${visibleCount} facturi înregistrate`;
        }

        // Evenimente
        document.getElementById('filterBtn').addEventListener('click', applyFilters);
        document.getElementById('searchInput').addEventListener('keyup', applyFilters);
    </script>
}
